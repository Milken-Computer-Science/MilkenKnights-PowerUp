plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2018.02.17"
    id 'org.hidetake.ssh' version '2.9.0'
}

def TEAM = 1836
def ROBOT_CLASS = "frc.team1836.robot.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Phoenix (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}

remotes {
    webServer {
        host = 'roborio-1836-frc.local'
        user = 'admin'
    }
}

ssh.settings {
    knownHosts = allowAnyHosts
}

task swerdUpdate {
    doLast {
        FileTree myFileTree = fileTree(dir: 'paths')
        ssh.run {
            session(remotes.webServer) {
                put from: myFileTree.getFiles(), into: '/home/lvuser/paths'
                get from: '/u', into: 'logs'
            }
        }
    }
}